# small script to perform the Collatz Conjecture and graph the output
# done two ways
# with a while loop and recursive function
# mathematics researchers have run 15 quintillion numbers and yet to find an exception
# no proof yet exists for the conjecture


def collatz_recursive(sequence):
	"""
	perform the Collatz Conjecture algorithm using a recursive function
	:param sequence: input number to start with
	:return: series generated by Collatx algorithm as string of numbers
	"""

	seq_in_str = str(sequence)
	seq_in_list = seq_in_str.split(",")
	curr_num = int(seq_in_list[-1])

	if curr_num % 2 == 0:
		next_num = int(curr_num / 2)
	else:
		next_num = int((curr_num * 3) + 1)

	seq_in_str += "," + str(next_num)

	if next_num == 1:
		return seq_in_str
	else:
		return collatz_recursive(seq_in_str)


def collatz_whileloop(start_num):
	"""
	perform the Collatz Conjecture algorithm using a while loop
	:param start_num: input number to start with
	:return: series generated by Collatx algorithm
	"""

	collatz_series = list()
	curr_num = start_num

	collatz_series.append(curr_num)
	while curr_num != 1:
		if curr_num % 2 == 0:
			next_num = int(curr_num / 2)
		else:
			next_num = int((curr_num * 3) + 1)
		collatz_series.append(next_num)
		curr_num = next_num

	return collatz_series


if __name__ == "__main__":
	start_num_list = list(range(2, 20))
	for num in start_num_list:
		#series = collatz_whileloop(num)
		series = collatz_recursive(num)
		print(series)
		